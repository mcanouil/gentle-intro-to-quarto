---
title: '![](assets/images/quarto-logo-trademark.svg){fig-alt="Quarto" height="2em"}<br>A [_Not So_]{style="font-size:50%;"} Gentle Introduction'
pagetitle: "Quarto: A Gentle Introduction"
editor:
  render-on-save: true
crossref:
  custom: 
    - kind: float
      prefix: Text
      name: Text
      ref-type: txt
    - kind: float
      prefix: Cross-reference example
      name: Cross-reference example
      ref-type: cr
filters:
  - webr
resources:
  - webr-serviceworker.js
  - webr-worker.js
---

::: {.content-visible when-profile="rlille"}
{{< include assets/quarto/_rlille-ad.qmd >}}
:::

# ![](assets/images/quarto-logo-trademark.svg){fig-alt="Quarto" height="1em"}

## What is Quarto? {{< iconify thinking-face >}}

```{r}
dir.create("assets/images", recursive = TRUE, showWarnings = FALSE)
webshot2::webshot(
  url = "https://quarto.org/",
  file = "assets/images/quarto-org.png",
  vwidth = 1920 * 0.55,
  vheight = 1080 * 0.55,
  cliprect = "viewport"
)
```

::: {.attribution}
<https://quarto.org/>
:::

## What is Quarto? {{< iconify thinking-face >}}

Quarto ([quarto.org](https://quarto.org/)):

- is a **free and open-source software**, released under the GPL by [Posit, PBC](https://posit.co/).
- is a **command line interface** (CLI).
- mainly supports **Python**, **R**, **Julia**, and **Observable JavaScript**.
- supports writing document as **Markdown** or **Jupyter Notebook**.
- can build **HTML**, **PDF**, **Microsoft Word**, *etc.*
- can build **websites**, **blogs**, **books**, *etc.*.
- is built on **Pandoc**.

## What is Pandoc? {{< iconify thinking-face >}}

::: {layout="[0.30, 0.70]" layout-valign="center"}
```{r}
webshot2::webshot(
  url = "https://pandoc.org/",
  file = "assets/images/pandoc-org.png",
  vwidth = 1920 * 0.60,
  vheight = 1080 * 1.80,
  cliprect = "viewport"
)
```

:::: {#pandoc-description}
Pandoc ([pandoc.org](https://pandoc.org/)):

- is a **free software**, released under the GPL by [John MacFarlane](http://johnmacfarlane.net/).
- is a **command line interface** (CLI).
- allows to **convert to and between multiple formats**.
- **understands Markdown** syntax.
- **understands LaTeX math** and macros.
- handles **citations and bibliographies**.
::::
:::

## A Guide to Quarto Versions

```{mermaid}
%%{init: { 'theme': 'dark' } }%%
timeline
    section Release
      1.0 : July, 2022
      1.1 : August, 2022
      1.2 : November, 2022
      1.3 : April, 2023 : Current
    section Pre-Release
      1.4 : Fall 2023
```

# Getting started

## Downloading and installing Quarto

```{r}
#| output: asis
page <- "https://quarto.org/docs/download/"
file <- "assets/images/quarto-download.png"
res <- webshot2::webshot(
  url = page,
  file = file,
  vwidth = 1920 * 0.75,
  vheight = 1080 * 0.75,
  cliprect = "viewport"
)
cat(sprintf("\n\n[![](%s){width=100%% fig-align=center fig-alt='Screenshot of %s webpage'}](%s)", file, page, page))
```

::: {.attribution}
<https://quarto.org/>
:::

## Downloading and installing Quarto

Additionally, you can download and install Quarto using:

::: {.columns}

:::: {.column}

- [Homebrew](https://brew.sh/) (macOS/linux)

```{.bash filename="Bash"}
brew install quarto
```

```{r}
#| output: asis
page <- "https://brew.sh/"
file <- "assets/images/quarto-homebrew.png"
res <- webshot2::webshot(
  url = page,
  file = file,
  vwidth = 1920 * 0.70,
  vheight = 1080 * 0.70,
  cliprect = "viewport"
)

cat('\n\n::: {style="text-align:center;"}\n\n')
cat(sprintf("\n\n[![<a href = '%s'>%s</a>](%s){fig-alt='Screenshot of %s webpage'}](%s)", page, page, file, page, "https://formulae.brew.sh/cask/quarto"))
cat("\n\n:::\n\n")
```

::::

:::: {.column}

- [Chocolatey](https://chocolatey.org/) (Windows)

```{.PowerShell filename="PowerShell"}
choco install quarto
```

```{r}
#| output: asis
page <- "https://community.chocolatey.org/"
file <- "assets/images/quarto-chocolatey.png"
res <- webshot2::webshot(
  url = page,
  file = file,
  vwidth = 1920 * 0.70,
  vheight = 1080 * 0.70,
  cliprect = "viewport"
)

cat('\n\n::: {style="text-align:center;"}\n\n')
cat(sprintf("\n\n[![<a href = '%s'>%s</a>](%s){fig-align=center fig-alt='Screenshot of %s webpage'}](%s)", page, page, file, page, "https://community.chocolatey.org/packages/quarto"))
cat("\n\n:::\n\n")
```

::::
:::

## Writing with your favourite editor {.smaller}

```{r}
#| classes: panel-tabset
#| output: asis
pages <- sprintf(
  "https://quarto.org/docs/get-started/hello/%s",
  c(
    "vscode.html",
    "jupyter.html",
    "rstudio.html",
    "neovim.html",
    "text-editor.html"
  )
)
for (ipage in pages) {
  file <- paste0(
    "assets/images/quarto-get-started-",
    sub("\\.html$", ".png", basename(ipage))
  )
  webshot2::webshot(
    url = ipage,
    file = file,
    vwidth = 1920 * 1.2,
    vheight = 1080 * 1,
    cliprect = "viewport"
  )
  cat("\n\n##", toupper(sub("\\.html$", "", basename(ipage))))
  cat(sprintf("\n\n[![](%s){fig-alt='Screenshot of %s webpage'}](%s)", file, ipage, ipage))
}
```

::: {.attribution}
<https://quarto.org/>
:::

## Quarto: a command line interface

```{bash}
#| echo: true
#| attr-output: 'style="font-size: 28%;"'
#| output-location: fragment
quarto --help
```

## Checking Quarto is installed

```bash
quarto check
```

::: {layout="[1, 1]" layout-align="center"}
![](assets/images/quarto-check.png)

{{< video assets/videos/quarto-check.mov >}}
:::

## Creating a new Quarto project

```{.bash filename="Bash"}
quarto create project
```

::: {.fragment}

```{.bash}
 ? Type
 ‚ùØ default
   website
   blog
   manuscript
   book
   confluence
```

:::

::: {.notes}
[Open Visual Studio Code](vscode://file//Users/mcanouil/Projects/perso/gentle-intro-to-quarto/demo)
:::

## Quarto projects: `default`

::: {layout-ncol="2" layout-valign="center"}

:::: {}

```{bash}
#| include: false
rm -rf demo/Default
cd demo
quarto create project default --no-open --no-prompt Default
```

```{.bash filename="Bash"}
quarto create project default Default
```

```{bash}
#| attr-output: 'style="font-size: 50%;"'
cd demo
tree Default
```

::::

:::: {.fragment}

```{r}
#| output: asis
system("cd demo/Default; quarto render Default.qmd")
page <- "demo/Default/Default.html"
file <- "assets/images/quarto-project-default.png"
res <- webshot2::webshot(
  url = page,
  file = file,
  vwidth = 1920 * 0.70,
  vheight = 1080 * 0.70,
  cliprect = "viewport"
)

cat('\n\n::: {style="text-align:center;"}\n\n')
cat(sprintf("\n\n![](%s){fig-align=center}", file))
cat("\n\n:::\n\n")
```

::::

:::

## Quarto projects: `default`

- `_quarto.yml`: project configuration file.

```{r}
#| attr-output: "filename='Quarto'"
#| class-output: yaml
cat(readLines("demo/Default/_quarto.yml"), sep = "\n")
```

- `Default.qmd`: default Quarto document.

```{r}
#| attr-output: "filename='Quarto'"
#| class-output: markdown
cat(readLines("demo/Default/Default.qmd"), sep = "\n")
```

## Quarto projects: `website`

::: {layout-ncol="2" layout-valign="center"}

:::: {}

```{bash}
#| include: false
rm -rf demo/Website
cd demo
quarto create project website --no-open --no-prompt Website
```

```{.bash filename="Bash"}
quarto create project website Website
```

```{bash}
#| attr-output: 'style="font-size: 50%;"'
cd demo
tree Website
```

::::

:::: {.fragment}

```{r}
#| output: asis
system("cd demo/Website; quarto render index.qmd")
page <- "demo/Website/_site/index.html"
file <- "assets/images/quarto-project-website.png"
res <- webshot2::webshot(
  url = page,
  file = file,
  vwidth = 1920 * 0.70,
  vheight = 1080 * 0.70,
  cliprect = "viewport"
)

cat('\n\n::: {style="text-align:center;"}\n\n')
cat(sprintf("\n\n![](%s){fig-align=center}", file))
cat("\n\n:::\n\n")
```

::::

:::

## Quarto projects: `blog`

::: {layout-ncol="2" layout-valign="center"}

:::: {}

```{bash}
#| include: false
rm -rf demo/Blog
cd demo
quarto create project blog --no-open --no-prompt Blog
```

```{.bash filename="Bash"}
quarto create project blog Blog
```

```{bash}
#| attr-output: 'style="font-size: 50%;"'
cd demo
tree Blog
```

::::

:::: {.fragment}

```{r}
#| output: asis
system("cd demo/Blog; quarto render index.qmd")
page <- "demo/Blog/_site/index.html"
file <- "assets/images/quarto-project-blog.png"
res <- webshot2::webshot(
  url = page,
  file = file,
  vwidth = 1920 * 0.70,
  vheight = 1080 * 0.70,
  cliprect = "viewport"
)

cat('\n\n::: {style="text-align:center;"}\n\n')
cat(sprintf("\n\n![](%s){fig-align=center}", file))
cat("\n\n:::\n\n")
```

::::

:::

## Quarto projects: `book`

::: {layout-ncol="2" layout-valign="center"}

:::: {}

```{bash}
#| include: false
rm -rf demo/Book
cd demo
quarto create project book --no-open --no-prompt Book
```

```{.bash filename="Bash"}
quarto create project book Book
```

```{bash}
#| attr-output: 'style="font-size: 50%;"'
cd demo
tree Book
```

::::

:::: {.fragment}

```{r}
#| output: asis
system("cd demo/Book; quarto render index.qmd")
page <- "demo/Book/_book/index.html"
file <- "assets/images/quarto-project-book.png"
res <- webshot2::webshot(
  url = page,
  file = file,
  vwidth = 1920 * 0.70,
  vheight = 1080 * 0.70,
  cliprect = "viewport"
)

cat('\n\n::: {style="text-align:center;"}\n\n')
cat(sprintf("\n\n![](%s){fig-align=center}", file))
cat("\n\n:::\n\n")
```

::::

:::

## Quarto projects: `manuscript`

::: {layout-ncol="2" layout-valign="center"}

:::: {}

```{bash}
#| include: false
rm -rf demo/Manuscript
cd demo
quarto create project manuscript --no-open --no-prompt Manuscript
```

```{.bash filename="Bash"}
quarto create project manuscript Manuscript
```

```{bash}
#| attr-output: 'style="font-size: 50%;"'
cd demo
tree Manuscript
```

::::

:::: {.fragment}

```{r}
#| output: asis
system("cd demo/Manuscript; quarto render index.qmd")
page <- "demo/Manuscript/_manuscript/index.html"
file <- "assets/images/quarto-project-manuscript.png"
res <- webshot2::webshot(
  url = page,
  file = file,
  vwidth = 1920 * 0.70,
  vheight = 1080 * 0.70,
  cliprect = "viewport"
)

cat('\n\n::: {style="text-align:center;"}\n\n')
cat(sprintf("\n\n![](%s){fig-align=center}", file))
cat("\n\n:::\n\n")
```

::::

:::

# Quarto features

## Writing using the Visual Editor {.smaller}

```{r}
#| classes: panel-tabset
#| output: asis
pages <- c(
  "vscode" = "https://quarto.org/docs/visual-editor/vscode/",
  "rstudio" = "https://quarto.org/docs/visual-editor/"
)
for (ipage in names(pages)) {
  file <- sprintf(
    "assets/images/quarto-visual-editor-%s.png",
    ipage
  )
  webshot2::webshot(
    url = pages[[ipage]],
    file = file,
    vwidth = 1920 * 1.2,
    vheight = 1080 * 1,
    cliprect = "viewport"
  )
  cat("\n\n##", toupper(ipage))
  cat(sprintf("\n\n[![](%s){fig-alt='Screenshot of %s webpage'}](%s)", file, pages[[ipage]], pages[[ipage]]))
}
```

::: {.attribution}
<https://quarto.org/>
:::

## Mermaid Diagrams

::: {layout-ncol="2" layout-valign="center"}

```{{mermaid}}
%%{init: { 'theme': 'dark' } }%%
flowchart LR
  qmd --> J([Jupyter])
  qmd --> K([knitr])
  J --> md
  K --> md
  md --> P([pandoc])
  P --> pdf
  P --> html
  P --> docx
```

:::: {.fragment}

```{mermaid}
%%{init: { 'theme': 'dark' } }%%
flowchart LR
  qmd --> J([Jupyter])
  qmd --> K([knitr])
  J --> md
  K --> md
  md --> P([pandoc])
  P --> pdf
  P --> html
  P --> docx
```

::::

:::

## Markdown tables

::: {layout-ncol="2"}

:::: {}

``` markdown
| Default | Left | Right | Center |
|---------|:-----|------:|:------:|
| 12      | 12   |    12 |   12   |
| 123     | 123  |   123 |  123   |
| 1       | 1    |     1 |   1    |

: Demonstration of pipe table syntax
```

::::

:::: {.fragment}

| Default | Left | Right | Center |
|---------|:-----|------:|:------:|
| 12      | 12   |    12 |   12   |
| 123     | 123  |   123 |  123   |
| 1       | 1    |     1 |   1    |

: Demonstration of pipe table syntax

::::

:::

## Code annotations

- Source

````markdown
```r
library(tidyverse)
library(palmerpenguins)
penguins |>                                            # <1>
  mutate(                                              # <2>
    bill_ratio = bill_depth_mm / bill_length_mm,       # <2>
    bill_area  = bill_depth_mm * bill_length_mm        # <2>
  )                                                    # <2>
```
1. Take `penguins`, and then,
2. add new columns for the bill ratio and bill area.
````

## Code annotations

- Output

```r
library(tidyverse)
library(palmerpenguins)
penguins |>                                            # <1>
  mutate(                                              # <2>
    bill_ratio = bill_depth_mm / bill_length_mm,       # <2>
    bill_area  = bill_depth_mm * bill_length_mm        # <2>
  )                                                    # <2>
```
1. Take `penguins`, and then,
2. add new columns for the bill ratio and bill area.

## Cross-references: "figures"

::: {layout-ncol="2" layout-valign="center"}

:::: {}

``` markdown
::: {#fig-example}
This is a figure

This is a caption for the figure.
:::

@fig-example is the reference to a figure.
Or is it?
```

::::

::::: {.fragment}

:::: {#fig-example}
This is a figure

This is a caption for the figure.
::::

@fig-example is the reference to a figure.
Or is it?
:::::
:::

## Cross-references: "tables"

::: {layout-ncol="2" layout-valign="center"}

:::: {}

``` markdown
::: {#tbl-example}
This is a table

This is a caption for the table.
:::

@tbl-example is the reference to a table.
Or is it?
```

::::

::::: {.fragment}

:::: {#tbl-example}
This is a table

This is a caption for the table.
::::

@tbl-example is the reference to a table.
Or is it?
:::::
:::

## Cross-references: "anything"

::::: {#cr-example}

Define a new cross-reference type:

```yaml
crossref:
  custom: 
    - kind: float # <1>
      prefix: Text # <2>
      name: Text # <3>
      ref-type: txt # <4>
```
1. cross-referenceable elements with captions are `float`.
2. used as the prefix for reference in output (*e.g.*, "In Figure 1, ...").
3. used as the prefix for captions (*e.g.*, "Figure 1: ...").
4. used as the prefix for the reference identifier (*e.g.*, "In \@fig-1, ...").

::: {layout-ncol="2" layout-valign="center"}

:::: {}

``` markdown
::: {#txt-example}
This is text

This is a caption for the text.
:::

@txt-example is the reference to a text.
```

::::

::::: {.fragment}

:::: {#txt-example}
This is text

This is a caption for the text.
:::

@txt-example is the reference to a text.
:::::
:::

The above is a custom cross-reference content.

:::::

## Shortcodes

::: {layout-ncol="2" layout-valign="center" .fragment}
:::: {}

``` markdown
{{{< meta tittle >}}}
```

::::

:::: {.fragment}
{{< meta title >}}
::::
:::

::: {layout-ncol="2" layout-valign="center" .fragment}
:::: {}

``` markdown
{{{< iconify exploding-head size=5x >}}}
```

::::

:::: {.fragment}
{{< iconify exploding-head size=5x >}}
::::
:::

## Extensions

::: {.callout-tip}
## Install the `quarto-webr` extension

```{.bash filename="Bash"}
quarto add coatless/quarto-webr
```

:::

::: {layout-ncol="2" layout-valign="center" .fragment}
:::: {}

```{{webr-r}}
fit = lm(mpg ~ am, data = mtcars)
summary(fit)
```

::::

:::: {.fragment}
```{webr-r}
fit <- lm(mpg ~ am, data = mtcars)
summary(fit)
```
::::

:::

::: {.fragment}
Discover more extensions at:

- <https://quarto.org/docs/extensions/>.
- <https://github.com/mcanouil/awesome-quarto#extensions>.
:::

::: {.attribution}
<https://quarto-webr.thecoatlessprofessor.com/>
:::

# Quarto resources

::: {layout-ncol="2" layout-valign="center" layout-align="center" style="text-align: center;"}
![](assets/images/quarto-logo-trademark.svg){width="400px"} 

![](https://raw.githubusercontent.com/mcanouil/awesome-quarto/main/media/media.svg){width="400px"}
:::

- <https://quarto.org/>
- <https://github.com/mcanouil/awesome-quarto#readme>

{{< include assets/quarto/_about.qmd >}}
